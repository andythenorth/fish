-1 * 1	 02 02 A0  // choose sprites according to speed.  Method used could be seen as a hack to avoid some boring maths with -1/+1 for speeds...
                 85 B4 00 \wxFFFF //
                 \b3 // range
                  B1 00  \w0  \w0 // moving (speed == 0)
                  B2 00  \w1  THIS_SPEED_STATE_1 // moving, speed 1
                  B4 00  THIS_SPEED_STATE_2  \wxFFFF // moving, speed 3
                 B3 00 // moving, speed 2

// handle callbacks etc - use separate varaction 2s for 'real' vehicles and buy menu - shared cb chain, different graphics IDs 
//-1 * 1   02 02 C0  // !!! not currently used by action 3 - will be needed though
//               81 0C 00 FF
//               \b1 // range
//                 E0 00  36 36 // change vehicle properties on refit
//               A0 00 // default 
-1 * 14	 02 02 C1 // buy menu 
               81 0C 00 FF //handle callbacks for buy menu
               \b1 // range
                 THIS_VEH_WINDOW_TEXT 80   23 23  // text for vehicle window (unless using varact 2 chain, simply return ID of D0 text) 
               B0 00 //otherwise go to next action 2 ID 
                 
-1 * 1	 03 02 01 THIS_VEH_ID // Action 3 
   01 // number of cargo types to support
    FF C1 00 // buy menu sprites 
   A0 00 // default sprites
   
#undef THIS_VEH_ID
#undef THIS_VEH_WINDOW_TEXT