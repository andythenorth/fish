<tal:call_global_template define="global_template load: global_template.pt" metal:use-macro="global_template" />

// -- begin ${vehicle.title} -- <!--! this adds a comment to aid reading the final nml -->

<tal:include define="graphics_vehicles load: graphics_vehicles.pynml" metal:use-macro="graphics_vehicles" />

switch (FEAT_SHIPS, SELF, ${vehicle.id}_switch_cargo_capacity, cargo_classes_in_consist) {
    bitmask(CC_PASSENGERS): return ${vehicle.capacity_pax};
    bitmask(CC_MAIL): return ${vehicle.capacity_mail};
    return ${vehicle.capacity_freight};
}

// -- print some of the vehicle non-nml properties to aid debugging -- //
// [no properties printed]

item(FEAT_SHIPS, ${vehicle.id}, ${vehicle.numeric_id}) {
    property {
        name:                           string(STR_NAME_${vehicle.id},string(STR_BUY_MENU_X_OFFSET));
        climates_available:             ALL_CLIMATES; // nml constant
        sound_effect:                   SOUND_TRUCK_START_2; //nml constant - likely this will be replaced by python global vars
        <!--! visual_effect:                  visual_effect(VISUAL_EFFECT_DIESEL, ${vehicle.smoke_offset}); // nml constant for DIESEL-->
        introduction_date:              date(${vehicle.intro_date},01,01); // config just supplies intro year - openttd randomises intro dates a bit anyway
        cargo_capacity:                 ${vehicle.capacity_pax}; // ! temp, needs to be specific to ship refittability
        sprite_id:                      SPRITE_ID_NEW_ROADVEH; //enable new graphics - nml constant
        speed:                          ${vehicle.speed}mph;
        cost_factor:                    ${vehicle.buy_cost};
        running_cost_factor:            ${vehicle.get_running_cost()};
        refit_cost:                     0;
        is_refittable:                  1;
        refittable_cargo_classes:       bitmask(${vehicle.refittable_classes});
        non_refittable_cargo_classes:   bitmask(${vehicle.non_refittable_classes});
        cargo_allow_refit:              [${vehicle.allowed_cargos}];
        cargo_disallow_refit:           [${vehicle.disallowed_cargos}];
        default_cargo_type:             GOOD;
        loading_speed:                  5;
        misc_flags:                     bitmask(ROADVEH_FLAG_2CC, ROADVEH_FLAG_AUTOREFIT); // nml constants
        model_life:                     ${vehicle.model_life};
        vehicle_life:                   ${vehicle.vehicle_life};
    }
    graphics {
        cargo_capacity:                 ${vehicle.id}_switch_cargo_capacity;
        additional_text:                ${vehicle.get_buy_menu_string()};
        default:                        ${vehicle.id}_sg;
        purchase:                       ${vehicle.id}_sg_purchase;
    }
}


// -- end ${vehicle.title} -- <!--! another comment to aid reading the final nml  -->
