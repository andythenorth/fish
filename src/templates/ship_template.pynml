// -- begin ${ship.title} -- <!--! this adds a comment to aid reading the final nml -->

<tal:include condition="ship.graphics_template=='default'" define="graphics_default load: graphics_default.pynml" metal:use-macro="graphics_default" />
<tal:include condition="ship.graphics_template=='hydrofoil'" define="graphics_hydrofoil load: graphics_hydrofoil.pynml" metal:use-macro="graphics_hydrofoil" />
<tal:include condition="ship.graphics_template=='2_visible_cargo_states'" define="graphics_2_visible_cargo_states load: graphics_2_visible_cargo_states.pynml" metal:use-macro="graphics_2_visible_cargo_states" />
<tal:include condition="ship.graphics_template=='standard_gcv'" define="graphics_standard_gcv load: graphics_standard_gcv.pynml" metal:use-macro="graphics_standard_gcv" />
<tal:include condition="ship.graphics_template=='tanker'" define="graphics_tanker load: graphics_tanker.pynml" metal:use-macro="graphics_tanker" />


// -- set speed a little higher than rated speed when unladen -- //
// -- also apply the param_adjust_ship_speed parameter -- //
<tal:speed repeat="speed_factor python:range(3)">
    switch (FEAT_SHIPS, SELF, ${ship.id}_switch_speed_varies_with_load_amount_${speed_factor}, cargo_count*100/cargo_capacity) {
        0 : ${ship.get_speeds_adjusted_for_load_amount(speed_factor)[0]};
        1..25 : ${ship.get_speeds_adjusted_for_load_amount(speed_factor)[1]};
        26..50 : ${ship.get_speeds_adjusted_for_load_amount(speed_factor)[2]};
        51..75 : ${ship.get_speeds_adjusted_for_load_amount(speed_factor)[3]};
        76..100 : ${ship.get_speeds_adjusted_for_load_amount(speed_factor)[4]};
        return 0; // should never reach this result, make it show up as a problem
    }
</tal:speed>
switch (FEAT_SHIPS, SELF, ${ship.id}_switch_speed_varies_with_load_amount, param_adjust_ship_speed) {
    0: ${ship.id}_switch_speed_varies_with_load_amount_0;
    1: ${ship.id}_switch_speed_varies_with_load_amount_1;
    2: ${ship.id}_switch_speed_varies_with_load_amount_2;
}
switch (FEAT_SHIPS, SELF, ${ship.id}_switch_purchase_speed, param_adjust_ship_speed) {
    0: ${ship.get_speeds_adjusted_for_load_amount(0)[4]};
    1: ${ship.get_speeds_adjusted_for_load_amount(1)[4]};
    2: ${ship.get_speeds_adjusted_for_load_amount(2)[4]};
}


${ship.render_autorefit()}

${ship.render_cargo_capacity()}

${ship.render_purchase_cargo_capacity()}

${ship.render_properties()}
