<tal:call_global_template define="global_template load: global_template.pt" metal:use-macro="global_template" />

// -- begin ${vehicle.title} -- <!--! this adds a comment to aid reading the final nml -->

<tal:include condition="vehicle.graphics_template=='default'" define="graphics_default load: graphics_default.pynml" metal:use-macro="graphics_default" />
<tal:include condition="vehicle.graphics_template=='hydrofoil'" define="graphics_hydrofoil load: graphics_hydrofoil.pynml" metal:use-macro="graphics_hydrofoil" />
<tal:include condition="vehicle.graphics_template=='2_visible_cargo_states'" define="graphics_2_visible_cargo_states load: graphics_2_visible_cargo_states.pynml" metal:use-macro="graphics_2_visible_cargo_states" />
<tal:include condition="vehicle.graphics_template=='provides_tanker_refit'" define="graphics_provides_tanker_refit load: graphics_provides_tanker_refit.pynml" metal:use-macro="graphics_provides_tanker_refit" />

switch (FEAT_SHIPS, SELF, ${vehicle.id}_switch_cargo_capacity, cargo_classes_in_consist) {
    bitmask(CC_PASSENGERS): return ${vehicle.capacity_pax};
    bitmask(CC_MAIL): return ${vehicle.capacity_mail};
    return ${vehicle.capacity_freight};
}

switch (FEAT_SHIPS, SELF, ${vehicle.id}_switch_speed_varies_with_load_amount, cargo_count*100/cargo_capacity) {
    0 : ${vehicle.get_speeds_adjusted_for_load_amount()[0]};
    1..25 : ${vehicle.get_speeds_adjusted_for_load_amount()[1]};
    26..50 : ${vehicle.get_speeds_adjusted_for_load_amount()[2]};
    51..75 : ${vehicle.get_speeds_adjusted_for_load_amount()[3]};
    76..100 : ${vehicle.get_speeds_adjusted_for_load_amount()[4]};
    return 0; // should never reach this result, make it show up as a problem
}

// -- print some of the vehicle non-nml properties to aid debugging -- //
// [no properties printed]

item(FEAT_SHIPS, ${vehicle.id}, ${vehicle.numeric_id}) {
    property {
        name:                           string(STR_NAME_${vehicle.id});
        climates_available:             ALL_CLIMATES; // nml constant
        sound_effect:                   SOUND_TRUCK_START_2; //nml constant - likely this will be replaced by python global vars
        <!--! visual_effect:                  visual_effect(VISUAL_EFFECT_DIESEL, ${vehicle.smoke_offset}); // nml constant for DIESEL-->
        introduction_date:              date(${vehicle.intro_date},01,01); // config just supplies intro year - openttd randomises intro dates a bit anyway
        cargo_capacity:                 ${vehicle.get_default_cargo_capacity()};
        sprite_id:                      SPRITE_ID_NEW_ROADVEH; //enable new graphics - nml constant
        speed:                          ${vehicle.speed}mph;
        ocean_speed_fraction:           ${vehicle.get_ocean_speed()};
        canal_speed_fraction:           ${vehicle.get_canal_speed()};
        cost_factor:                    ${vehicle.buy_cost};
        running_cost_factor:            ${vehicle.get_running_cost()};
        refit_cost:                     0;
        is_refittable:                  1;
        refittable_cargo_classes:       bitmask(${vehicle.get_refittable_classes()['allow']});
        non_refittable_cargo_classes:   bitmask(${vehicle.get_refittable_classes()['disallow']});
        cargo_allow_refit:              [${vehicle.allowed_cargos}];
        cargo_disallow_refit:           [${vehicle.disallowed_cargos}];
        default_cargo_type:             ${vehicle.default_cargo};
        loading_speed:                  5;
        misc_flags:                     bitmask(ROADVEH_FLAG_2CC, ROADVEH_FLAG_AUTOREFIT); // nml constants
        model_life:                     ${vehicle.model_life};
        vehicle_life:                   ${vehicle.vehicle_life};
    }
    graphics {
        speed:                          ${vehicle.id}_switch_speed_varies_with_load_amount;
        purchase_speed:                 ${vehicle.get_speeds_adjusted_for_load_amount()[4]};
        cargo_capacity:                 ${vehicle.id}_switch_cargo_capacity;
        purchase_cargo_capacity:        ${vehicle.get_default_cargo_capacity()};
        additional_text:                ${vehicle.get_buy_menu_string()};
        default:                        ${vehicle.id}_switch_graphics;
        purchase:                       ${vehicle.id}_sg_purchase;
    }
}


// -- end ${vehicle.title} -- <!--! another comment to aid reading the final nml  -->
