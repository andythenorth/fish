// handle graphics

template spriteset_template_${vehicle.id}(y) {
    //[left_x,  upper_y,    width,      height,     offset_x,      offset_y]
    [20,        y,          28,         89,          ${vehicle.offsets[0][0]}, ${vehicle.offsets[0][1]}]
    [60,        y,          113,        66,          ${vehicle.offsets[1][0]}, ${vehicle.offsets[1][1]}]
    [186,       y,          138,        48,          ${vehicle.offsets[2][0]}, ${vehicle.offsets[2][1]}]
    [328,       y,          113,        66,          ${vehicle.offsets[3][0]}, ${vehicle.offsets[3][1]}]
    [454,       y,          28,         89,          ${vehicle.offsets[4][0]}, ${vehicle.offsets[4][1]}]
    [494,       y,          113,        66,          ${vehicle.offsets[5][0]}, ${vehicle.offsets[5][1]}]
    [620,       y,          138,        48,          ${vehicle.offsets[6][0]}, ${vehicle.offsets[6][1]}]
    [762,       y,          113,        66,          ${vehicle.offsets[7][0]}, ${vehicle.offsets[7][1]}]
}

spriteset(${vehicle.id}_ss_gcv_not_loaded_not_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(10)
}
spriteset(${vehicle.id}_ss_gcv_not_loaded_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(110)
}
spriteset(${vehicle.id}_ss_gcv_loading_0, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(210)
}
spriteset(${vehicle.id}_ss_gcv_loading_1, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(310)
}
spriteset(${vehicle.id}_ss_gcv_loading_2, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(410)
}
spriteset(${vehicle.id}_ss_gcv_loading_3, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(510)
}
spriteset(${vehicle.id}_ss_gcv_loaded_not_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(610)
}
spriteset(${vehicle.id}_ss_gcv_loaded_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(710)
}

spritegroup ${vehicle.id}_sg_gcv_moving {
    loaded:  [
        ${vehicle.id}_ss_gcv_not_loaded_moving,
        ${vehicle.id}_ss_gcv_loaded_moving,
    ];
    loading: [ // can't be loading when moving, but we'll overlook that, it's required by nml ;)
        ${vehicle.id}_ss_gcv_loaded_moving,
    ];
}

spritegroup ${vehicle.id}_sg_gcv_not_moving {
    loaded:  [
        ${vehicle.id}_ss_gcv_not_loaded_not_moving,
        ${vehicle.id}_ss_gcv_loaded_not_moving,
    ];
    loading: [
        ${vehicle.id}_ss_gcv_loading_0,
        ${vehicle.id}_ss_gcv_loading_1,
        ${vehicle.id}_ss_gcv_loading_2,
        ${vehicle.id}_ss_gcv_loading_3,
    ];
}

switch (FEAT_SHIPS, SELF, ${vehicle.id}_switch_gcv_graphics, current_speed) {
    0: return ${vehicle.id}_sg_gcv_not_moving;
    return ${vehicle.id}_sg_gcv_moving;
}

spriteset(${vehicle.id}_ss_tanker_not_loaded_not_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(810)
}
spriteset(${vehicle.id}_ss_tanker_not_loaded_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(910)
}
spriteset(${vehicle.id}_ss_tanker_loaded_not_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(1010)
}
spriteset(${vehicle.id}_ss_tanker_loaded_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(1110)
}

spritegroup ${vehicle.id}_sg_tanker_moving {
    loaded:  [
        ${vehicle.id}_ss_tanker_not_loaded_moving,
        ${vehicle.id}_ss_tanker_loaded_moving,
    ];
    loading: [ // can't be loading when moving, but we'll overlook that, it's required by nml ;)
        ${vehicle.id}_ss_tanker_loaded_moving,
    ];
}

spritegroup ${vehicle.id}_sg_tanker_not_moving {
    loaded:  [
        ${vehicle.id}_ss_tanker_not_loaded_not_moving,
        ${vehicle.id}_ss_tanker_loaded_not_moving,
    ];
    loading: [
        ${vehicle.id}_ss_tanker_not_loaded_not_moving,
        ${vehicle.id}_ss_tanker_loaded_not_moving,
    ];
}

switch (FEAT_SHIPS, SELF, ${vehicle.id}_switch_tanker_graphics, current_speed) {
    0: return ${vehicle.id}_sg_tanker_not_moving;
    return ${vehicle.id}_sg_tanker_moving;
}

// choose graphics based on cargo class refitted to

switch (FEAT_SHIPS, SELF, ${vehicle.id}_switch_graphics, cargo_classes) {
    bitmask(CC_LIQUID): return ${vehicle.id}_switch_tanker_graphics;
    return ${vehicle.id}_switch_gcv_graphics;
}


// buy menu graphics

template spriteset_template_purchase_${vehicle.id}() {
    //[left_x,  upper_y,    width,      height,     offset_x,      offset_y]
    [${vehicle.buy_menu_bb_xy[0]}, ${vehicle.buy_menu_bb_xy[1]}, 70, 22, -35, -10]
}

spriteset(${vehicle.id}_ss_purchase, "src/graphics/${vehicle.id}.png") {
  spriteset_template_purchase_${vehicle.id}()
}

spritegroup ${vehicle.id}_sg_purchase {
    loaded:  [
        ${vehicle.id}_ss_purchase,
    ];
    loading: [
        ${vehicle.id}_ss_purchase,
    ];
}

// handle autorefit (and associated subtype strings)
<tal:include define="autorefit_any load: autorefit_any.pynml" metal:use-macro="autorefit_any" />
