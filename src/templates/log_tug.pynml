<tal:call_global_template define="global_template load: global_template.pt" metal:use-macro="global_template" />

// -- begin ${vehicle.title} -- <!--! this adds a comment to aid reading the final nml -->


// handle graphics

template spriteset_template_${vehicle.id}(y) {
    //[left_x,  upper_y,    width,      height,     offset_x,      offset_y]
    [20,        y,          28,         89,          ${vehicle.offsets[0][0]}, ${vehicle.offsets[0][1]}]
    [60,        y,          113,        66,          ${vehicle.offsets[1][0]}, ${vehicle.offsets[1][1]}]
    [186,       y,          138,        48,          ${vehicle.offsets[2][0]}, ${vehicle.offsets[2][1]}]
    [328,       y,          113,        66,          ${vehicle.offsets[3][0]}, ${vehicle.offsets[3][1]}]
    [454,       y,          28,         89,          ${vehicle.offsets[4][0]}, ${vehicle.offsets[4][1]}]
    [494,       y,          113,        66,          ${vehicle.offsets[5][0]}, ${vehicle.offsets[5][1]}]
    [620,       y,          138,        48,          ${vehicle.offsets[6][0]}, ${vehicle.offsets[6][1]}]
    [762,       y,          113,        66,          ${vehicle.offsets[7][0]}, ${vehicle.offsets[7][1]}]
}

spriteset(${vehicle.id}_sg_not_loaded_not_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(10)
}
spriteset(${vehicle.id}_sg_not_loaded_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(110)
}
spriteset(${vehicle.id}_sg_loading_0, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(210)
}
spriteset(${vehicle.id}_sg_loading_1, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(310)
}
spriteset(${vehicle.id}_sg_loading_2, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(410)
}
spriteset(${vehicle.id}_sg_loading_3, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(510)
}
spriteset(${vehicle.id}_sg_loaded_not_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(610)
}
spriteset(${vehicle.id}_sg_loaded_moving, "src/graphics/${vehicle.id}.png") {
  spriteset_template_${vehicle.id}(710)
}

spritegroup ${vehicle.id}_sg_moving {
    loaded:  [
        ${vehicle.id}_sg_not_loaded_moving,
        ${vehicle.id}_sg_loaded_moving,
    ];
    loading: [ // can't be loading when moving, but we'll overlook that, it's required by nml ;)
        ${vehicle.id}_sg_loaded_moving,
    ];
}

spritegroup ${vehicle.id}_sg_not_moving {
    loaded:  [
        ${vehicle.id}_sg_not_loaded_not_moving,
        ${vehicle.id}_sg_loaded_not_moving,
    ];
    loading: [
        ${vehicle.id}_sg_loading_0,
        ${vehicle.id}_sg_loading_1,
        ${vehicle.id}_sg_loading_2,
        ${vehicle.id}_sg_loading_3,
    ];
}

switch (FEAT_SHIPS, SELF, ${vehicle.id}_switch_graphics, current_speed) {
    0: return ${vehicle.id}_sg_not_moving;
    return ${vehicle.id}_sg_moving;
}


//!!
// -- capacity varies according to subtype refit -- //
switch (FEAT_SHIPS, SELF, ${vehicle.id}_switch_cargo_capacity, cargo_classes) {
    bitmask(CC_PASSENGERS): return ${vehicle.capacity_pax};
    bitmask(CC_MAIL): return ${vehicle.capacity_mail};
    return ${vehicle.capacity_freight};
}


//!! consider how this handles variable capacity by refit
// -- set speed a little higher than rated speed when unladen -- //
switch (FEAT_SHIPS, SELF, ${vehicle.id}_switch_speed_varies_with_load_amount, cargo_count*100/cargo_capacity) {
    0 : ${vehicle.get_speeds_adjusted_for_load_amount()[0]};
    1..25 : ${vehicle.get_speeds_adjusted_for_load_amount()[1]};
    26..50 : ${vehicle.get_speeds_adjusted_for_load_amount()[2]};
    51..75 : ${vehicle.get_speeds_adjusted_for_load_amount()[3]};
    76..100 : ${vehicle.get_speeds_adjusted_for_load_amount()[4]};
    return 0; // should never reach this result, make it show up as a problem
}

// -- print some of the vehicle non-nml properties to aid debugging -- //
// [no properties printed]

item(FEAT_SHIPS, ${vehicle.id}, ${vehicle.numeric_id}) {
    property {
        name:                           string(STR_NAME_${vehicle.id});
        climates_available:             ALL_CLIMATES; // nml constant
        sound_effect:                   ${('SOUND_SHIP_HORN','SOUND_FERRY_HORN')[vehicle.default_cargo=='PASS']};
        <!--! visual_effect:                  visual_effect(VISUAL_EFFECT_DIESEL, ${vehicle.smoke_offset}); // nml constant for DIESEL-->
        introduction_date:              date(${vehicle.intro_date},01,01); // config just supplies intro year - openttd randomises intro dates a bit anyway
        cargo_capacity:                 ${vehicle.get_default_cargo_capacity()};
        sprite_id:                      SPRITE_ID_NEW_ROADVEH; //enable new graphics - nml constant
        speed:                          ${vehicle.speed}mph;
        ocean_speed_fraction:           ${vehicle.get_ocean_speed()};
        canal_speed_fraction:           ${vehicle.get_canal_speed()};
        cost_factor:                    ${vehicle.buy_cost};
        running_cost_factor:            ${vehicle.get_running_cost()};
        refit_cost:                     0;
        is_refittable:                  1;
        refittable_cargo_classes:       bitmask(${vehicle.get_refittable_classes()});
        non_refittable_cargo_classes:   bitmask();
        cargo_allow_refit:              [${vehicle.allowed_cargos}];
        cargo_disallow_refit:           [${vehicle.disallowed_cargos}];
        default_cargo_type:             ${vehicle.default_cargo};
        loading_speed:                  ${vehicle.loading_speed};
        misc_flags:                     bitmask(SHIP_FLAG_2CC, SHIP_FLAG_AUTOREFIT); // nml constants
        model_life:                     ${vehicle.get_adjusted_model_life()};
        retire_early:                   ${vehicle.vehicle_life - 4}; // magic from Eddi
        vehicle_life:                   ${vehicle.vehicle_life};
    }
    graphics {
        //speed:                          ${vehicle.id}_switch_speed_varies_with_load_amount;
        //purchase_speed:                 ${vehicle.get_speeds_adjusted_for_load_amount()[4]};
        //cargo_capacity:                 ${vehicle.id}_switch_cargo_capacity;
        //purchase_cargo_capacity:        ${vehicle.get_default_cargo_capacity()};
        //additional_text:                ${vehicle.get_buy_menu_string()};
        //cargo_subtype_text:             ${vehicle.id}_switch_cargo_subtype_text;
        //refit_cost:                     ${vehicle.id}_switch_refit_cost;
        default:                        ${vehicle.id}_switch_graphics;
        //purchase:                       ${vehicle.id}_sg_purchase;
    }
}


// -- end ${vehicle.title} -- <!--! another comment to aid reading the final nml  -->
